Sub neurolucida_summary()
Application.ScreenUpdating = False
'-----------------------------------
Dim xFd As FileDialog
Dim xFdItem As Variant
Dim xFileName As String
Dim xFB As String
With Application.FileDialog(msoFileDialogOpen)
.AllowMultiSelect = True
.Filters.Clear
.Filters.Add "excel", "*.xls*"
.Show
If .SelectedItems.Count < 1 Then Exit Sub
For lngCount = 1 To .SelectedItems.Count
xFileName = .SelectedItems(lngCount)
If xFileName <> "" Then
With Workbooks.Open(Filename:=xFileName)
sFileName = Split(xFileName, "\")(UBound(Split(xFileName, "\")))
'-----------------------------------
'NAME OF EXCEL WORKBOOK
    Windows(sFileName).Activate
    Sheets("Neuron Summary").Select
    Range("A1").Select
    ActiveCell.Offset(1, 26).Range("A1").Select
    ActiveCell.FormulaR1C1 = sFileName
    Selection.Copy
    Windows("Neurolucida-Summary-Table.xlsm").Activate
    ActiveCell.Offset(0, 0).Range("A1").Select
    ActiveCell.Offset(1, 0).Range("A1").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
'Total Length  (µm)
    Windows(sFileName).Activate
    Sheets("Segment-Dendrites").Select
    Range("A1").Select
    ActiveCell.Offset(0, 14).Range("A1").Select
    ActiveCell.FormulaR1C1 = "=SUM(C[-11])"
    Selection.Copy
    Windows("Neurolucida-Summary-Table.xlsm").Activate
    ActiveCell.Offset(0, 0).Range("A1").Select
    ActiveCell.Offset(0, 1).Range("A1").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    
'Average Segment Length (µm)
    Windows(sFileName).Activate
    Sheets("Segment-Dendrites").Select
    Range("A1").Select
    ActiveCell.Offset(0, 15).Range("A1").Select
    ActiveCell.FormulaR1C1 = "=AVERAGE(C4)"
    Selection.Copy
    Windows("Neurolucida-Summary-Table.xlsm").Activate
    ActiveCell.Offset(0, 0).Range("A1").Select
    ActiveCell.Offset(0, 1).Range("A1").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    
'Average Tortuosity
    Windows(sFileName).Activate
    Sheets("Segment-Dendrites").Select
    Range("A1").Select
    ActiveCell.Offset(0, 16).Range("A1").Select
    ActiveCell.FormulaR1C1 = "=AVERAGE(C5)"
    Selection.Copy
    Windows("Neurolucida-Summary-Table.xlsm").Activate
    ActiveCell.Offset(0, 0).Range("A1").Select
    ActiveCell.Offset(0, 1).Range("A1").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    
'Average  Surface Area (µm²)
    Windows(sFileName).Activate
    Sheets("Segment-Dendrites").Select
    Range("A1").Select
    ActiveCell.Offset(0, 17).Range("A1").Select
    ActiveCell.FormulaR1C1 = "=AVERAGE(C6)"
    Selection.Copy
    Windows("Neurolucida-Summary-Table.xlsm").Activate
    ActiveCell.Offset(0, 0).Range("A1").Select
    ActiveCell.Offset(0, 1).Range("A1").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
        
'Total Branch Volume (µm³)
    Windows(sFileName).Activate
    Sheets("Segment-Dendrites").Select
    Range("A1").Select
    ActiveCell.Offset(0, 18).Range("A1").Select
    ActiveCell.FormulaR1C1 = "=SUM(C7)"
    Selection.Copy
    Windows("Neurolucida-Summary-Table.xlsm").Activate
    ActiveCell.Offset(0, 0).Range("A1").Select
    ActiveCell.Offset(0, 1).Range("A1").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
        
'Average Branch Volume (µm³)
    Windows(sFileName).Activate
    Sheets("Segment-Dendrites").Select
    Range("A1").Select
    ActiveCell.Offset(0, 19).Range("A1").Select
    ActiveCell.FormulaR1C1 = "=AVERAGE(C7)"
    Selection.Copy
    Windows("Neurolucida-Summary-Table.xlsm").Activate
    ActiveCell.Offset(0, 0).Range("A1").Select
    ActiveCell.Offset(0, 1).Range("A1").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
     

'Average  Base Diameter (µm)
    Windows(sFileName).Activate
    Sheets("Segment-Dendrites").Select
    Range("A1").Select
    ActiveCell.Offset(0, 20).Range("A1").Select
    ActiveCell.FormulaR1C1 = "=AVERAGE(C13)"
    Selection.Copy
    Windows("Neurolucida-Summary-Table.xlsm").Activate
    ActiveCell.Offset(0, 0).Range("A1").Select
    ActiveCell.Offset(0, 1).Range("A1").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False

'Total N° of segments
    Windows(sFileName).Activate
    Sheets("Tree Totals-Dendrite").Select
    Range("A1").Select
    ActiveCell.Offset(0, 12).Range("A1").Select
    ActiveCell.FormulaR1C1 = "=SUM(C2)"
    Selection.Copy
    Windows("Neurolucida-Summary-Table.xlsm").Activate
    ActiveCell.Offset(0, 0).Range("A1").Select
    ActiveCell.Offset(0, 1).Range("A1").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False

'Segments/mm
    Windows(sFileName).Activate
    Sheets("Tree Totals-Dendrite").Select
    Range("A1").Select
    ActiveCell.Offset(0, 32).Range("A1").Select
    ActiveCell.FormulaR1C1 = "=SUM(C[-31])"
        Range("A1").Select
    ActiveCell.Offset(0, 33).Range("A1").Select
    ActiveCell.FormulaR1C1 = "=SUM(C[-31])"
        Range("A1").Select
    ActiveCell.Offset(1, 33).Range("A1").Select
    ActiveCell.FormulaR1C1 = "=R[-1]C/1000"
        Range("A1").Select
    ActiveCell.Offset(2, 33).Range("A1").Select
    Application.CutCopyMode = False
    ActiveCell.FormulaR1C1 = "=R[-2]C[-1]/R[-1]C"
    Selection.Copy
    Windows("Neurolucida-Summary-Table.xlsm").Activate
    ActiveCell.Offset(0, 0).Range("A1").Select
    ActiveCell.Offset(0, 1).Range("A1").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False

'Total N° of segments trees
    Windows(sFileName).Activate
    Sheets("Neuron Summary").Select
    Range("A1").Select
    ActiveCell.Offset(0, 22).Range("A1").Select
    ActiveCell.FormulaR1C1 = "=R[3]C[-21]"
    Selection.Copy
    Windows("Neurolucida-Summary-Table.xlsm").Activate
    ActiveCell.Offset(0, 0).Range("A1").Select
    ActiveCell.Offset(0, 1).Range("A1").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False

'Surface (µm²)
    Windows(sFileName).Activate
    Sheets("Neuron Summary").Select
    Range("A1").Select
    ActiveCell.Offset(3, 17).Range("A1").Select
    Selection.Copy
    Windows("Neurolucida-Summary-Table.xlsm").Activate
    ActiveCell.Offset(0, 0).Range("A1").Select
    ActiveCell.Offset(0, 1).Range("A1").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False

'Complexity
    Windows(sFileName).Activate
    Sheets("Neuron Summary").Select
    Range("A1").Select
    ActiveCell.Offset(3, 21).Range("A1").Select
    Selection.Copy
    Windows("Neurolucida-Summary-Table.xlsm").Activate
    ActiveCell.Offset(0, 0).Range("A1").Select
    ActiveCell.Offset(0, 1).Range("A1").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False

'Average Planar angle
    Windows(sFileName).Activate
    Sheets("Branch Angle-Dendrite").Select
    Range("A1").Select
    ActiveCell.Offset(0, 5).Range("A1").Select
    ActiveCell.FormulaR1C1 = "=AVERAGE(C3)"
    Selection.Copy
    Windows("Neurolucida-Summary-Table.xlsm").Activate
    ActiveCell.Offset(0, 0).Range("A1").Select
    ActiveCell.Offset(0, 1).Range("A1").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False

'Convex Hull Volume (µm³)
    Windows(sFileName).Activate
    Sheets("Convex Hull 3D").Select
    Range("A1").Select
    ActiveCell.Offset(1, 0).Range("A1").Select
    Selection.Copy
    Windows("Neurolucida-Summary-Table.xlsm").Activate
    ActiveCell.Offset(0, 0).Range("A1").Select
    ActiveCell.Offset(0, 1).Range("A1").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False

'Convex Hull Surface (µm²)
    Windows(sFileName).Activate
    Sheets("Convex Hull 3D").Select
    Range("A1").Select
    ActiveCell.Offset(1, 1).Range("A1").Select
    Selection.Copy
    Windows("Neurolucida-Summary-Table.xlsm").Activate
    ActiveCell.Offset(0, 0).Range("A1").Select

    ActiveCell.Offset(0, 1).Range("A1").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False


'Convex Hull Area (µm²)
    Windows(sFileName).Activate
    Sheets("Convex Hull 2D").Select
    Range("A1").Select
    ActiveCell.Offset(1, 0).Range("A1").Select
    Selection.Copy
    Windows("Neurolucida-Summary-Table.xlsm").Activate
    ActiveCell.Offset(0, 0).Range("A1").Select
    ActiveCell.Offset(0, 1).Range("A1").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False

'Convex Hull Perimeter (µm)
    Windows(sFileName).Activate
    Sheets("Convex Hull 2D").Select
    Range("A1").Select
    ActiveCell.Offset(1, 1).Range("A1").Select
    Selection.Copy
    Windows("Neurolucida-Summary-Table.xlsm").Activate
    ActiveCell.Offset(0, 0).Range("A1").Select
    ActiveCell.Offset(0, 1).Range("A1").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False

'k-Dim
    Windows(sFileName).Activate
    Sheets("Box Counting-Trees").Select
    Range("A1").Select
    ActiveCell.Offset(12, 2).Range("A1").Select
    Selection.Copy
    Windows("Neurolucida-Summary-Table.xlsm").Activate
    ActiveCell.Offset(0, 0).Range("A1").Select
    ActiveCell.Offset(0, 1).Range("A1").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Windows(sFileName).Activate
    Sheets("Vertex-Dendrite").Select
    Range("A1").Select

 
'VERTEX_DENDRITE Macro
    Windows(sFileName).Activate
    Sheets("Vertex-Dendrite").Select
    Last = Cells(Rows.Count, "A").End(xlUp).Row
    For i = Last To 1 Step -1
        If (Cells(i, "A").Value) = "Total" Then
                Cells(i, "A").EntireRow.Delete
        End If
    Next i
    Last = Cells(Rows.Count, "A").End(xlUp).Row
    For i = Last To 1 Step -1
        If (Cells(i, "A").Value) = "Adjusted" Then
                Cells(i, "A").EntireRow.Delete
        End If
    Next i
    
'EXECUTE MATHS
    Windows(sFileName).Activate
    Sheets("Vertex-Dendrite").Select
    Range("A1").Select
    ActiveCell.Offset(0, 10).Range("A1").Select
    Application.CutCopyMode = False
    ActiveCell.FormulaR1C1 = "=SUM(C[-8])"
    ActiveCell.Offset(0, 1).Range("A1").Select
    ActiveCell.FormulaR1C1 = "=SUM(C[-8])"
    ActiveCell.Offset(0, 1).Range("A1").Select
    ActiveCell.FormulaR1C1 = "=SUM(C[-8])"
   
'COPY RESULTS OF SUM OF VA, VB, BC TO Neurolucida-Summary-Table.xlsm
    Windows(sFileName).Activate
    Sheets("Vertex-Dendrite").Select
    Range("A1").Select
    ActiveCell.Offset(0, 10).Range("A1").Select
    Selection.Copy
    Windows("Neurolucida-Summary-Table.xlsm").Activate


    ActiveCell.Offset(0, 1).Range("A1").Select
        Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
        
    Windows(sFileName).Activate
    Range("A1").Select
    ActiveCell.Offset(0, 11).Range("A1").Select
    Selection.Copy
    Windows("Neurolucida-Summary-Table.xlsm").Activate
    ActiveCell.Offset(0, 0).Range("A1").Select
    ActiveCell.Offset(0, 1).Range("A1").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Windows(sFileName).Activate
    Range("A1").Select
    ActiveCell.Offset(0, 12).Range("A1").Select
    Selection.Copy
    Windows("Neurolucida-Summary-Table.xlsm").Activate
    ActiveCell.Offset(0, 0).Range("A1").Select
    ActiveCell.Offset(0, 1).Range("A1").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    ActiveCell.Offset(0, -21).Range("A1").Select
    Windows("Neurolucida-Summary-Table.xlsm").Activate
    ActiveSheet.Cells.Columns("A:A").AutoFit
Workbooks(sFileName).Close SaveChanges:=False
Application.ScreenUpdating = False

End With
End If
Next lngCount
End With
End Sub


'=========================================================================
'Outlier scores
'=========================================================================
Sub Test_Out()
Dim i As Long, j As Long, k As Long, n_raw As Long, n_dimension As Long
Dim tmp_x As Double, tmp_y As Double
Dim vArr As Variant
Dim x() As Double, y() As Double, x_class As Variant, factor_labels() As String
Dim x_shift() As Double, x_scale() As Double
Dim y_MD() As Double, y_LOF() As Double, y_kNN() As Double, y_Influence() As Double
Dim mywkbk As Workbook
    Set mywkbk = ActiveWorkbook
    Application.Calculation = xlCalculationManual
    Application.ScreenUpdating = False
    
    Call Read_Data(mywkbk.Sheets("Outlier"), n_raw, n_dimension, x, x_class, factor_labels) 'Read in raw data
    Call modMath.Normalize_x(x, x_shift, x_scale, "AVGSD") 'Normalize raw data
'Call Clean_Outlier
    Dim PCA1 As New cPCA
    Call PCA1.PCA(x)     'Perform PCA on raw data
    With mywkbk.Sheets("Outliers")
        .Range("A3:G10000").Clear
        .Range("M3:Q10000").Clear
        .Range("A3").Resize(n_raw, 1).Value = modMath.wkshtTranspose(x_class)
        .Range("B3").Resize(n_raw, 2).Value = PCA1.x_PCA(2)     'Output data projected onto the first 2 PCs
        .Range("M3").Resize(n_dimension, 2).Value = modMath.wkshtTranspose(factor_labels)
        Call PCA1.BiPlot_Print(.Range("N3"), 1, 2)              'Print Biplot for the first 2 PCs
    End With
    Call PCA1.Reset
    Set PCA1 = Nothing
    
    y_MD = mOutliers.MahalanobisDist(x)
    y_LOF = mOutliers.LOF(x, 5)
    y_kNN = mOutliers.KthNeighborDist(x, 5, True)
    y_Influence = mOutliers.Influence_Iterate(x)
    
    With mywkbk.Sheets("Outliers")
        .Range("D3").Resize(n_raw, 1).Value = modMath.wkshtTranspose(y_MD)
        .Range("E3").Resize(n_raw, 1).Value = modMath.wkshtTranspose(y_LOF)
        .Range("F3").Resize(n_raw, 1).Value = modMath.wkshtTranspose(y_kNN)
        .Range("G3").Resize(n_raw, 1).Value = modMath.wkshtTranspose(y_Influence)
        
    End With
    
    Erase x, x_class, x_shift, x_scale
    Set mywkbk = Nothing
    Application.Calculation = xlCalculationAutomatic
    Application.ScreenUpdating = True
End Sub
